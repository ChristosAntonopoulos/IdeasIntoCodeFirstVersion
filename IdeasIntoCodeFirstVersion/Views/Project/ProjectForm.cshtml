@model IdeasIntoCodeFirstVersion.ViewModels.ProjectFormViewModel

@{
    ViewBag.Title = "ProjectForm";
}




    <div className="wrapper">
        <div className="form-wrapper">
            <h2>Create New Project</h2>
            <form onSubmit={this.handleSubmit} noValidate className='regform'>
                <div className="title">
                    <label htmlFor="title">Title</label>
                    <input type="text"
                           name="title"
                           value="title"
                           onChange={this.handleChange}
                           noValidate
                           className='regforminput' />
                </div>
                <div className="description">
                    <label htmlFor="description">Description</label>
                    <input type="text"
                           name="description"
                           value="description"
                           onChange={this.handleChange}
                           noValidate
                           className='regforminput' />
                </div>
                <div className="submit">
                    <button className='regbtn'>Create</button>
                </div>
            </form>
        </div>
    </div>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    @*<script>
        function removeParentElement() {
            event.target.parentElement.remove()
        }
        $(document).ready(function () {

            var projectCategories = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: '/api/categories'
            });

            $('#selectpcategories').typeahead({
                minLength: 1,
                highlight: true
            },
                {
                    name: 'projectcategories',
                    display: 'name',
                    source: projectCategories
                }).on("typeahead:select", function (e, projectcategory) {

                    $("#selectedcategories").append("<li class='list-group-item'><input type='hidden' name='category' value='"
                        + projectcategory.id + "' /> " + projectcategory.name +
                        '<button type="button" style="background-color:red" class="deletebutton" onclick="removeParentElement()"> X</button></li>')

                });


            var programmingLanguages = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: '/api/programminglanguages'
            });

            $('#selectprogramminglanguages').typeahead({
                minLength: 1,
                highlight: true
            },
                {
                    name: 'programmingLanguages',
                    display: 'name',
                    source: programmingLanguages
                }).on("typeahead:select", function (e, programminglanguage) {

                    $("#selectedprogramminglanguages").append("<li class='list-group-item d-flex justify-content-between align-items-center'><input type='hidden' name='programmingLanguage' value='"
                        + programminglanguage.id + "' /> " + programminglanguage.name +
                        '<button type="button" style="background-color:red" class="deletebutton" onclick="removeParentElement()"></button></li>')
                });
        })



        $('input:text').click(
            function () {
                $(this).val('');
            });

    </script>*@

}

