@model IdeasIntoCodeFirstVersion.ViewModels.ProjectFormViewModel

@{
    ViewBag.Title = "ProjectForm";
}

<h2>@Model.Title</h2>

@using (Html.BeginForm("Save", "Project"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Project.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Project.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.HiddenFor(p => p.Project.AdminID)
        </div>

        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    <label class="control-label col-md-2">Programming Languages</label>
                    <input id="selectprogramminglanguages" name="programminglanguages" type="text" value="" class="form-control" />
                </div>

                <div class="form-group ">
                    <ul class="col-md-offset-2 col-md-10" id="selectedprogramminglanguages">
                    </ul>
                </div>

            </div>

            <div class="col-6">
                <div class="form-group">
                    <label class="control-label col-md-2">Categories</label>
                    <input id="selectpcategories" name="category" type="text" value="" class="form-control" />
                </div>

                <div class="form-group ">
                    <ul class="col-md-offset-2 col-md-10" id="selectedcategories">
                    </ul>
                </div>

            </div>


        </div>
        

        <div class="form-group">
           
                <input type="submit" value="Create" class="btn btn-danger" />
           
        </div>



    </div>


}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script>
        function removeParentElement() {
                    event.target.parentElement.remove()
                 }
        $(document).ready(function () {

            var projectCategories = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: '/api/categories'
            });

            $('#selectpcategories').typeahead({
                minLength: 1,
                highlight: true
            },
                {
                    name: 'projectcategories',
                    display: 'name',
                    source: projectCategories
                }).on("typeahead:select", function (e, projectcategory) {

                    $("#selectedcategories").append("<li class='list-group-item'><input type='hidden' name='category' value='"
                        + projectcategory.id + "' /> " + projectcategory.name +
                        '<button type="button" style="background-color:red" class="deletebutton" onclick="removeParentElement()"> X</button></li>')

                });

            
            var programmingLanguages = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: '/api/programminglanguages'
            });

            $('#selectprogramminglanguages').typeahead({
                minLength: 1,
                highlight: true
            },
                {
                    name: 'programmingLanguages',
                    display: 'name',
                    source: programmingLanguages
                }).on("typeahead:select", function (e, programminglanguage) {

                    $("#selectedprogramminglanguages").append("<li class='list-group-item'><input type='hidden' name='programmingLanguage' value='"
                        + programminglanguage.id + "' /> " + programminglanguage.name +
                        '<button type="button" style="background-color:red" class="deletebutton" onclick="removeParentElement()"> X</button></li>')

                });

        })
    </script>

}
