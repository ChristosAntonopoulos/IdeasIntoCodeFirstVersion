@model ICollection<IdeasIntoCodeFirstVersion.Interface.INewsFeed>
@using IdeasIntoCodeFirstVersion.Models
@{
    ViewBag.Title = "NewsFeed";
}

<div class="container">
    <h1 class="h3 mb-3">Profile</h1>
    <div class="row">


        <div class="col-md-8 col-xl-9">
            <div class="card">
                <div class="card-header">
                    <div class="card-actions float-right">
                        <div class="dropdown show">
                            <a href="#" data-toggle="dropdown" data-display="static">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-more-horizontal align-middle">
                                    <circle cx="12" cy="12" r="1"></circle>
                                    <circle cx="19" cy="12" r="1"></circle>
                                    <circle cx="5" cy="12" r="1"></circle>
                                </svg>
                            </a>

                            <div class="dropdown-menu dropdown-menu-right">
                                <a class="dropdown-item" href="#">Action</a>
                                <a class="dropdown-item" href="#">Another action</a>
                                <a class="dropdown-item" href="#">Something else here</a>
                            </div>
                        </div>
                    </div>
                    <h5 class="card-title mb-0">Activities</h5>
                </div>
                <div class="card-body h-100" id="newsfeed">

                    @foreach (var item in Model)
                    {
                        if (item.GetType() == typeof(Follow))
                        {
                            <div class="media">
                                <div class="media-body">
                                    <small class="float-right text-navy">@(item.TimeStamp)</small>
                                    <strong>@((item as Follow).Follower.FullName)</strong> started following <strong>@((item as Follow).Followee.FullName)</strong>
                                    <br>
                                    <small class="text-muted">Today 7:51 pm</small>
                                    <br>

                                </div>
                            </div>



                        }
                        else if (item.GetType() == typeof(Project))
                        {
                            <div class="media">
                                <img src="https://bootdey.com/img/Content/avatar/avatar6.png" width="36" height="36" class="rounded-circle mr-2" alt="@((item as Project).Admin.FullName)">
                                <div class="media-body">
                                    <small class="float-right text-navy">30m ago</small>
                                    <strong>@((item as Project).Admin.FullName)</strong> created  <strong>@((item as Project).Admin.Name)</strong>
                                    <br>
                                    <small class="text-muted">Today 7:21 pm</small>

                                    <div class="border text-sm text-muted p-2 mt-1">
                                        @((item as Project).Description)
                                    </div>


                                </div>
                            </div>

                        }
                        else
                        {
                            <div class="media">
                                <img src="https://bootdey.com/img/Content/avatar/avatar6.png" width="36" height="36" class="rounded-circle mr-2" alt="@((item as Comment).Project.Admin.FullName)">
                                <div class="media-body">
                                    <small class="float-right text-navy">30m ago</small>
                                    <strong>@((item as Comment).Developer.FullName)</strong> commented at   <strong>@((item as Comment).Project.Title)</strong>
                                    <br>
                                    <small class="text-muted">Today 7:21 pm</small>

                                    <div class="border text-sm text-muted p-2 mt-1">
                                        @((item as Comment).Project.Description)
                                    </div>


                                </div>
                            </div>

                        }
                    }


                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script src="~/signalr/hubs" type="text/javascript"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            var hub = $.connection.NewsFeedTickerHub;

            $.extend(hub, {
                broadcaastNotif: function (data) {


                    $("#media").append(data.timeStamp);
                    //// Container for newItem
                    //var blankDiv = $("<div class='itemContainer'></div>");

                    //// Holds the update
                    //var newItem = $("<div class='" + data.UpdateType.toLowerCase() + "_item'><span>" + data.Name + "</span></div>");

                    //// Hide our blank div (that will contain the new update), and our new item itself.
                    //// The blank div will slide down, and our newItem will fade into existence.
                    //blankDiv.hide();
                    //newItem.hide();

                    //// Insert the update at the top of the list, as it's sorted in descending order by publish date.
                    //$("div#container div:first").before(blankDiv);
                    //blankDiv.html(newItem);

                    //// Slide down the blank div (it has a fixed height in CSS), and then fade the new update in.
                    //blankDiv.slideDown(500, null, function () {
                    //    newItem.fadeIn(2000)
                    //});
                }
            });



            $.connection.hub.start()
                .done(function () {
                    console.log("Hub Connected!");

                })
                .fail(function () {
                    console.log("Could not Connect!");
                });
        });



    </script>
}