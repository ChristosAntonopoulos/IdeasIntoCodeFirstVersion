@model IdeasIntoCodeFirstVersion.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_IndexLayout.cshtml";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    
    @*<div class="container">


        <div class="container h-100">
            <div class="row h-100 justify-content-center align-items-center">
                <div class="col-10 col-md-8 col-lg-6">
                    <form class="form-example" action="" method="post">
                        <h1 class="text-center">Create new account</h1>

                        <div class="form-group">
                                <label for="password">First Name:</label>
                                <input class="form-group" type="text" name="name" id="name" placeholder="@Model.Name">
                                <i class="fas fa-check-circle"></i>
                                <i class="fas fa-exclamation-circle"></i>
                                <small>Error message</small>
                            </div>
                            <div class="form-group">
                                <label for="password">Last Name:</label>
                                <input class="form-group" type="text" name="lastname" id="lastname" placeholder="@Model.LastName">
                                <i class="fas fa-check-circle"></i>
                                <i class="fas fa-exclamation-circle"></i>
                                <small>Error message</small>
                            </div>

                        <div class="form-group">
                            <label for="password">Email:</label>
                            <input class="form-group" name="email" type="email" id="email" placeholder="@Model.Email">
                            <i class="fas fa-check-circle"></i>
                            <i class="fas fa-exclamation-circle"></i>
                            <small>Error message</small>
                        </div>

                        <div class="form-group">
                            <label for="password">Password:</label>
                            <input class="form-group" type="password" name="password" id="password" placeholder="@Model.Password">
                            <i class="fas fa-check-circle"></i>
                            <i class="fas fa-exclamation-circle"></i>
                            <small>Error message</small>
                        </div>

                        <div class="form-group">
                            <label for="password">Confirm password:</label>
                            <input class="form-group" type="password" name="confirmpassword" id="confirmpassword" placeholder="@Model.ConfirmPassword">
                            <i class="fas fa-check-circle"></i>
                            <i class="fas fa-exclamation-circle"></i>
                            <small>Error message</small>
                        </div>
                        <div class="form-group">
                                <label for="password">Picture:</label>
                                <div class="custom-file">
                                    <input type="file" class="custom-file-input" id="validatedCustomFile">
                                    <label class="custom-file-label" for="validatedCustomFile"></label>
                                </div>
                            </div>


                        <button type="submit" class="btn btn-primary btn-customized">Submit</button>
                    </form>
                </div>
            </div>
        </div>

    </div>*@
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.LastName, new { @class = "form-control" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Name, new { @class = "form-control" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-primary" value="Next" />
        </div>
    </div>


<style>
    h1 {
        color: blue;
        font-style: italic;
    }

    label {
        font-weight: bold;
    }

    .form {
        padding: 30px 40px;
    }

    .container {
        background-color: lightsteelblue;
    }
    /* FORM VALIDATION CSS */

    .form-group input,
    select {
        border: 2px solid #f0f0f0;
        border-radius: 4px;
        display: block;
        font-family: inherit;
        font-size: 14px;
        padding: 10px;
        width: 100%;
    }

        .form-group input:focus,
        select:focus,
        option:focus {
            outline: 0;
            border-color: #777;
        }

    .form-group.success input {
        border-color: #2ecc71;
    }

    .form-group.success select {
        border-color: #2ecc71;
    }

    .form-group.error input {
        border-color: #e74c3c;
    }

    .form-group.error select {
        border-color: #e74c3c;
    }

    .form-group i {
        visibility: hidden;
        position: absolute;
        top: 500px;
        right: 380px;
    }

    .form-group.success i.fa-check-circle {
        color: #2ecc71;
        visibility: visible;
    }

    .form-group.error i.fa-exclamation-circle {
        color: #e74c3c;
        visibility: visible;
    }

    .form-group small {
        color: #e74c3c;
        position: absolute;
        bottom: 109x;
        left: 10;
        visibility: hidden;
    }

    .form-group.error small {
        visibility: visible;
    }




    /* Technologies Cards CSS */



    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Lato", sans-serif;
    }

    /* ====HEADING==== */





    .grid {
        display: flex;
        flex-direction: column;
        margin-top: 10px;
    }


    #input-box {
        margin-bottom: 20px;
        width: 100%;
        background: transparent;
        border: none;
        /* border-bottom: 1px solid #9e9e9e; */
    }

    ::-webkit-input-placeholder {
        /* WebKit, Blink, Edge */
        color: black;
    }

    /* ====BUTTONS==== */


    .fas:hover {
        color: red;
    }
</style>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
